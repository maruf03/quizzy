"""
Django settings for quiz_project project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8x@xezeii4inx1skk*kyl4_s1+j-r2p$vw^evp25cff2rt$7ok'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Third-party
    'rest_framework',
    'channels',
    # Local apps
    'accounts',
    'quizzes',
    'submissions',
    'realtime',
    'core',
    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.AttemptGuardMiddleware',
]

ROOT_URLCONF = 'quiz_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.global_ui',
            ],
        },
    },
]

WSGI_APPLICATION = 'quiz_project.wsgi.application'
# ASGI for Channels (configured later for realtime)
ASGI_APPLICATION = 'quiz_project.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Ensure leading slash so ASGI static wrapper matches path prefix (previous value caused 404s under Daphne)
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication backends and auth settings
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'accounts.backends.EmailOrUsernameBackend',
]

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Realtime / Channels configuration
import os

USE_REDIS_CHANNEL_LAYER = os.environ.get("USE_REDIS_CHANNEL_LAYER", "1") == "1"
REDIS_URL = os.environ.get("REDIS_URL", "redis://127.0.0.1:6379/0")

if USE_REDIS_CHANNEL_LAYER:
    _redis_channels_ok = True
    try:
        # Lightweight connectivity probe (non-fatal)
        import redis  # type: ignore
        _tmp = redis.Redis.from_url(REDIS_URL, socket_connect_timeout=0.2, socket_timeout=0.2)
        _tmp.ping()
    except Exception:
        _redis_channels_ok = False
    if _redis_channels_ok:
        CHANNEL_LAYERS = {
            "default": {
                "BACKEND": "channels_redis.core.RedisChannelLayer",
                "CONFIG": {"hosts": [REDIS_URL]},
            }
        }
    else:
        CHANNEL_LAYERS = {  # Fallback
            "default": {"BACKEND": "channels.layers.InMemoryChannelLayer"}
        }
else:
    CHANNEL_LAYERS = {
        "default": {"BACKEND": "channels.layers.InMemoryChannelLayer"}
    }

# Cache: prefer Redis if available, fallback to locmem
USE_REDIS_CACHE = os.environ.get("USE_REDIS_CACHE", "0") == "1"  # default off until stable
REDIS_CACHE_URL = os.environ.get("REDIS_CACHE_URL", "redis://127.0.0.1:6379/1")
if USE_REDIS_CACHE:
    _redis_cache_ok = False
    try:  # Attempt a fast ping to avoid runtime 500s if Redis absent
        import redis  # type: ignore
        _rc = redis.Redis.from_url(REDIS_CACHE_URL, socket_connect_timeout=0.2, socket_timeout=0.2)
        _rc.ping()
        _redis_cache_ok = True
    except Exception:  # pragma: no cover - best effort
        _redis_cache_ok = False
    if _redis_cache_ok:
        CACHES = {
            "default": {
                "BACKEND": "django.core.cache.backends.redis.RedisCache",
                "LOCATION": REDIS_CACHE_URL,
            }
        }
    else:
        CACHES = {
            "default": {
                "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
                "LOCATION": "quizzy-local-cache",
            }
        }
else:
    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
            "LOCATION": "quizzy-local-cache",
        }
    }

# Global UI / feature configuration
SITE_NAME = "Quizzy"
APP_VERSION = "0.1.0"
ENV_LABEL = "DEV" if DEBUG else ""
DEFAULT_THEME = "light"
FEATURE_FLAGS = {
    "realtime": True,
    "bootstrap_ui": True,
}
MAX_QUIZ_ATTEMPTS = 3

# Email / SMTP (local mail server at 127.0.0.1:1025)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = '127.0.0.1'
EMAIL_PORT = 1025
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False
DEFAULT_FROM_EMAIL = 'Quizzy <noreply@quizzy.local>'

